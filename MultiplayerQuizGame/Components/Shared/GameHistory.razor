@inject IUserRepository UserRepository
@if(_isLoaded)
{
    <div class="p-4">
    <div class="bg-white w-full md:max-w-4xl rounded-lg shadow p-1">
        <table class="w-full md:max-w-4xl">
            <thead class="bg-gray-200">
                <tr>
                    <th>Quiz Name</th>
                    <th>Points</th>
                    <th>Score</th>
                    <th>Game Mode</th>
                    <th>Date</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var entry in _gameHistory)
                {
                        <tr class="even:bg-gray-200 odd:bg-white transition ease-in-out delay-150 bg-blue-500 hover:-translate-y-1 hover:scale-102 hover:bg-indigo-400 hover:text-white duration-300">
                    <th>
                        @entry.Quiz.Title
                    </th>
                    <td>
                        @entry.Points
                    </td>
                    <td>
                        @entry.Score / @entry.Quiz.QuestionCount
                    </td>
                    <td>
                        @if(entry.GameMode == GameMode.SINGLEPLAYER)
                          {
                              <p>Singleplayer</p>
                          }
                        else
                        {
                            <p>Multiplayer</p>
                        }
                    </td>
                    <td>
                        @entry.DateTime
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    </div>
}
else
{
    <span>Loading...</span>

}

@code {
    [Parameter]
    public int UserId { get; set; }

    private List<UserQuizStampDto> _gameHistory = new List<UserQuizStampDto>();
    private bool _isLoaded = true;

    protected override async Task OnInitializedAsync()
    {
        _gameHistory = await UserRepository.GetUserGameHistory(UserId);
        _isLoaded = true;
    }

    
    }



